(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{429:function(t,_,v){"use strict";v.r(_);var a=v(55),s=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"回车url后-页面的变化过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#回车url后-页面的变化过程"}},[t._v("#")]),t._v(" 回车url后，页面的变化过程")]),t._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#过程概览"}},[t._v("过程概览")])]),v("li",[v("a",{attrs:{href:"#dns解析"}},[t._v("DNS解析")])]),v("li",[v("a",{attrs:{href:"#发送tcp请求"}},[t._v("发送TCP请求")]),v("ul",[v("li",[v("a",{attrs:{href:"#三次握手"}},[t._v("三次握手")])]),v("li",[v("a",{attrs:{href:"#四次挥手"}},[t._v("四次挥手")])])])]),v("li",[v("a",{attrs:{href:"#发送http请求"}},[t._v("发送HTTP请求")]),v("ul",[v("li",[v("a",{attrs:{href:"#请求行"}},[t._v("请求行")])]),v("li",[v("a",{attrs:{href:"#请求报头"}},[t._v("请求报头")])]),v("li",[v("a",{attrs:{href:"#请求正文"}},[t._v("请求正文")])])])]),v("li",[v("a",{attrs:{href:"#服务器处理请求并返回http报文"}},[t._v("服务器处理请求并返回HTTP报文")]),v("ul",[v("li",[v("a",{attrs:{href:"#状态码"}},[t._v("状态码")])]),v("li",[v("a",{attrs:{href:"#常见的状态码"}},[t._v("常见的状态码")])]),v("li",[v("a",{attrs:{href:"#响应报头"}},[t._v("响应报头")])]),v("li",[v("a",{attrs:{href:"#响应正文"}},[t._v("响应正文")])])])]),v("li",[v("a",{attrs:{href:"#浏览器解析渲染页面"}},[t._v("浏览器解析渲染页面")]),v("ul",[v("li",[v("a",{attrs:{href:"#什么是回流"}},[t._v("什么是回流？")])]),v("li",[v("a",{attrs:{href:"#什么是重绘"}},[t._v("什么是重绘？")])])])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"过程概览"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程概览"}},[t._v("#")]),t._v(" 过程概览")]),t._v(" "),v("p",[t._v("在浏览器的地址栏中，输入了url,并敲击回车之后，到页面渲染完成，这中间大概做了以下几件事:")]),t._v(" "),v("ol",[v("li",[t._v("DNS解析域名")]),t._v(" "),v("li",[t._v("发送了TCP连接")]),t._v(" "),v("li",[t._v("发送了HTTP请求")]),t._v(" "),v("li",[t._v("服务器处理i请求并返回的HTTP响应报文")]),t._v(" "),v("li",[t._v("浏览器解析渲染页面(提及回流、重绘知识)")]),t._v(" "),v("li",[t._v("连接结束")])]),t._v(" "),v("h2",{attrs:{id:"dns解析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns解析"}},[t._v("#")]),t._v(" DNS解析")]),t._v(" "),v("p",[t._v("DNS（Domain Name System）解析是指域名解析，在输入url敲击回车后，浏览器将开始域名解析。互联网中，每一台机器都有唯一标识的IP地址，因IP地址不好去记忆，而有了DNS解析，域名并非真实的网络地址，而是IP地址的映射。比如用户键入了"),v("code",[t._v("www.baidu.com")]),t._v("。解析过程就如下所示:")]),t._v(" "),v("ol",[v("li",[t._v("本地域名服务器寻找")]),t._v(" "),v("li",[t._v('若本地域名服务器没有，则去根域名服务器寻找"."  ("."就是根域名服务器,一般浏览器中，地址栏尾部的根域名会被省略，浏览器在请求DNS的时候会自动加上)')]),t._v(" "),v("li",[t._v('若根域名服务器没有，则去顶级域名服务器寻找".com"')]),t._v(" "),v("li",[t._v("以上述方式类推，当找到对应映射")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("1、IP地址")]),t._v(" "),v("p",[t._v("容易理解而又不太准确的说，IP地址是电脑在网络中的唯一标识，局域网IP是限于局域网内可以相互访问的电脑；公网中的固定IP，可以说是电脑在公网网络中的唯一标识。")]),t._v(" "),v("p",[t._v("2、DNS（Domain Name System）域名服务系统，简单的说就是域名与IP转换服务（负责将你输入的域名转换为IP，类似于电话本，把你拨打电话的名字转换为手机号）。")]),t._v(" "),v("p",[t._v("网络真正的访问是通过IP来实现的，但是IP地址像电话一样不好记（或者大部分时候百度、淘宝等网站为了负载均衡和大规模访问其实有很多IP地址的），这时候大家都是用域名（如www.baidu.com）比较好记住的地址。")]),t._v(" "),v("p",[t._v("www.baidu.com如何转换为百度的IP呢？就是通过DNS服务（就类似于一个巨型、记录了全世界ip与域名的电话本），指定到对应的IP服务器。")])]),t._v(" "),v("h2",{attrs:{id:"发送tcp请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发送tcp请求"}},[t._v("#")]),t._v(" 发送TCP请求")]),t._v(" "),v("p",[t._v("TCP提供一种可靠的传输，这个过程总涉及到三次握手、四次挥手。")]),t._v(" "),v("h3",{attrs:{id:"三次握手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),v("ul",[v("li",[t._v("第一次握手：客户端发送syn包，及序列号seq=x。")]),t._v(" "),v("li",[t._v("第二次握手:   服务端发送syn包,ack确认报文（为接收到客户端序列号seq+1),序列号    seq=y")]),t._v(" "),v("li",[t._v("第三次握手:   客户端发送确认报文(为接收到服务端序列号+1),序列号seq=Z")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("位码即tcp标志位，有6种标示：")]),t._v(" "),v("p",[t._v("① SYN(synchronous建立联机)；")]),t._v(" "),v("p",[t._v("② ACK(acknowledgement 确认)")]),t._v(" "),v("p",[t._v("③ PSH(push传送)")]),t._v(" "),v("p",[t._v("④ FIN(finish结束)")]),t._v(" "),v("p",[t._v("⑤ RST(reset重置)")]),t._v(" "),v("p",[t._v("⑥ URG(urgent紧急)")]),t._v(" "),v("p",[t._v("Sequence number(顺序号码) //Acknowledge number(确认号码)")])]),t._v(" "),v("h3",{attrs:{id:"四次挥手"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),v("p",[t._v("四次挥手即终止TCP连接，指的是断开一个TCP连接时，需要客户端和服务端总共发送4个包以确认连接的断开。在socket编程中，这一过程由客户端或服务端任一方执行close来触发。")]),t._v(" "),v("h4",{attrs:{id:"挥手原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#挥手原则"}},[t._v("#")]),t._v(" 挥手原则")]),t._v(" "),v("p",[t._v("由于TCP连接是全双工的，因此，每个方向都必须要单独进行关闭。当一方完成数据发送的任务后，发送一个FIN来终止这一方向的连接，收到一个FIN只意味着这一方向上没有数据流动了，既不会在收到数据了，但是这个TCP连接上，仍然能够发送数据。直到这一方向也发送了FIN。首先进行关闭的一方将执行主动关闭，而另一方则执行被动关闭。")]),t._v(" "),v("h4",{attrs:{id:"过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),v("ol",[v("li",[t._v("TCP客户端发送一个FIN报文，用来关闭客户到服务器的数据传送")]),t._v(" "),v("li",[t._v("服务器收到FIN报文，返回一个ACK报文，确认序号为收到的序号+1,。和SYN一样，一个FIN报文将占用一个序号。")]),t._v(" "),v("li",[t._v("服务器关闭客户端的连接，发送一个FIN给客户端。")]),t._v(" "),v("li",[t._v("客户端返回ACK报文确认，确认号为收到序号+1")])]),t._v(" "),v("h2",{attrs:{id:"发送http请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#发送http请求"}},[t._v("#")]),t._v(" 发送HTTP请求")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("HTTP的端口为80/8080，而HTTPS的端口为443")])]),t._v(" "),v("p",[t._v("发送HTTP请求的过程是构建HTTP请求报文，并通过TCP协议中发送到服务器指定端口。请求报文由三部分组成: "),v("strong",[t._v("请求头/请求报头")]),t._v("、"),v("strong",[t._v("请求行")]),t._v("、"),v("strong",[t._v("请求正文")]),t._v("。")]),t._v(" "),v("h3",{attrs:{id:"请求行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求行"}},[t._v("#")]),t._v(" 请求行")]),t._v(" "),v("p",[t._v("格式为: "),v("code",[t._v("Method Request-URL HTTP-Version CRLF")]),t._v(" "),v("code",[t._v("eg: GET index.html HTTP/1.1")]),t._v(",常见的请求方法有:")]),t._v(" "),v("ol",[v("li",[t._v("GET")]),t._v(" "),v("li",[t._v("POST")]),t._v(" "),v("li",[t._v("DELETE")]),t._v(" "),v("li",[t._v("PUT")]),t._v(" "),v("li",[t._v("OPTIONS")]),t._v(" "),v("li",[t._v("HEAD")])]),t._v(" "),v("h4",{attrs:{id:"请求方法之间的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求方法之间的区别"}},[t._v("#")]),t._v(" 请求方法之间的区别")]),t._v(" "),v("p",[t._v("拿常用的GET和POST举例，它们之间有以下区别")]),t._v(" "),v("ol",[v("li",[t._v("GET在浏览器回退时是无害的，而POST会再次提交请求。(post每次调用都会创建新的资源。而get会将请求参数放在请求的url中，回退时浏览器从之前的缓存中拿结果。"),v("strong",[t._v("参见下列第3、5条")]),t._v(")")]),t._v(" "),v("li",[t._v("GET产生的URL地址可以被Bookmark，而POST不可以")]),t._v(" "),v("li",[t._v("GET请求会被浏览器主动cache,而POST不会，除非手动设置。")]),t._v(" "),v("li",[t._v("GET请求只能进行url编码，而POST支持多种编码方式。")]),t._v(" "),v("li",[t._v("GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。")]),t._v(" "),v("li",[t._v("GET比POST更不安全，因为参数直接暴露在URL上，所不能用来传递敏感信息。")]),t._v(" "),v("li",[t._v("GET参数通过URL传递，POST放在Request body中传递。")])]),t._v(" "),v("h4",{attrs:{id:"get和post发送数据包的次数区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#get和post发送数据包的次数区别"}},[t._v("#")]),t._v(" GET和POST发送数据包的次数区别")]),t._v(" "),v("p",[t._v("GET会发送一个TCP数据包，而POST发送2个TCP数据包。")]),t._v(" "),v("ul",[v("li",[t._v("GET请求，浏览器会将"),v("strong",[t._v("http header")]),t._v("和"),v("strong",[t._v("data")]),t._v("一并发出去。服务器响应200")]),t._v(" "),v("li",[t._v("POST请求，浏览器会先发"),v("strong",[t._v("http header")]),t._v("，服务器响应100 continue,最后在发送"),v("strong",[t._v("data")]),t._v(",服务器响应200")])]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),v("p",[t._v("​\t但这一点在不同技术网站上有所争议。仅供参考。(并非所有浏览器都发送2次，Firefox就发送一次)。")])]),t._v(" "),v("h3",{attrs:{id:"请求报头"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求报头"}},[t._v("#")]),t._v(" 请求报头")]),t._v(" "),v("p",[t._v("请求报头允许客户端向服务器传递请求的附加信息和客户端自身信息。请求报头中使用了Accept, Accept-Encoding, Accept-Language, Cache-Control, Connection, Cookie等字段。")]),t._v(" "),v("ul",[v("li",[t._v("Accept用于指定客户端用于接受哪些类型的信息，Accept-Encoding与Accept类似，它用于指定接受的编码方式。")]),t._v(" "),v("li",[t._v("Connection设置为Keep-alive用于告诉客户端本次HTTP请求结束之后并不需要关闭TCP连接，这样可以使下次HTTP请求使用相同的TCP通道，节省TCP连接建立的时间。")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("通常情况下，开发者会在axios中的拦截器interceptor.request.use）,设置请求头，比如authorization: bear token)等")])]),t._v(" "),v("h3",{attrs:{id:"请求正文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求正文"}},[t._v("#")]),t._v(" 请求正文")]),t._v(" "),v("p",[t._v("当使用POST，PUT等方法时，通常需要客户端向服务器传递数据。这些数据就储存在请求正文中。")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),v("p",[t._v("​\t现在的Web应用通常采用Rest架构，请求的数据格式一般为json，这时就需要在请求报头中设置 "),v("code",[t._v("Content-Type: application/json")]),t._v(" 。")])]),t._v(" "),v("h2",{attrs:{id:"服务器处理请求并返回http报文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务器处理请求并返回http报文"}},[t._v("#")]),t._v(" 服务器处理请求并返回HTTP报文")]),t._v(" "),v("p",[t._v("它会对TCP连接进行处理，对HTTP协议进行解析，并按照报文格式进一步封装成HTTP Request对象，供上层使用。这一部分工作一般是由Web服务器去进行。HTTP报文也分成三份:")]),t._v(" "),v("ol",[v("li",[t._v("状态码")]),t._v(" "),v("li",[t._v("响应报头")]),t._v(" "),v("li",[t._v("响应正文")])]),t._v(" "),v("h3",{attrs:{id:"状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),v("p",[t._v("它是由三位数组成，第一个数字定义了相应的类别，且有五种可能取值:")]),t._v(" "),v("ul",[v("li",[t._v("1xx:  指示信息-表示请求已接收，继续处理。")]),t._v(" "),v("li",[t._v("2xx:  成功-表示请求已被成功接收。")]),t._v(" "),v("li",[t._v("3xx:  重定向-要完成请求必须进行进一步的操作。")]),t._v(" "),v("li",[t._v("4xx:  客户端错误-请求有语法错误或请求无法实现")]),t._v(" "),v("li",[t._v("5xx:  服务器端错误-服务器未能实现合法的请求。")])]),t._v(" "),v("h3",{attrs:{id:"常见的状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见的状态码"}},[t._v("#")]),t._v(" 常见的状态码")]),t._v(" "),v("h4",{attrs:{id:"_200-成功"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_200-成功"}},[t._v("#")]),t._v(" 200 成功")]),t._v(" "),v("p",[t._v("请求成功，服务器提供了需要的资源")]),t._v(" "),v("h4",{attrs:{id:"_204-无内容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_204-无内容"}},[t._v("#")]),t._v(" 204 无内容")]),t._v(" "),v("p",[t._v("服务器成功处理了请求，但没有返回任何内容")]),t._v(" "),v("h4",{attrs:{id:"_301-永久移动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_301-永久移动"}},[t._v("#")]),t._v(" 301 永久移动")]),t._v(" "),v("p",[t._v("请求的网页已移动到新位置，返回(GET或POST)响应时，会自动将请求者转到新位置。")]),t._v(" "),v("h4",{attrs:{id:"_302-临时移动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_302-临时移动"}},[t._v("#")]),t._v(" 302 临时移动")]),t._v(" "),v("p",[t._v("服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。")]),t._v(" "),v("h4",{attrs:{id:"_304-未修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_304-未修改"}},[t._v("#")]),t._v(" 304 未修改")]),t._v(" "),v("p",[t._v("GET请求一被允许，而文档内容并没有改变。（服务端已经执行了GET，但文件未变化。）")]),t._v(" "),v("h4",{attrs:{id:"_400-错误请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_400-错误请求"}},[t._v("#")]),t._v(" 400 错误请求")]),t._v(" "),v("p",[t._v("服务器不理解请求的语法")]),t._v(" "),v("h4",{attrs:{id:"_401-未授权"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_401-未授权"}},[t._v("#")]),t._v(" 401 未授权")]),t._v(" "),v("p",[t._v("请求要求身份验证，对于需要登录的网页，服务器可能返回此相应。")]),t._v(" "),v("h4",{attrs:{id:"_403-禁止"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_403-禁止"}},[t._v("#")]),t._v(" 403 禁止")]),t._v(" "),v("p",[t._v("服务器拒绝请求")]),t._v(" "),v("h4",{attrs:{id:"_404-未找到"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_404-未找到"}},[t._v("#")]),t._v(" 404 未找到")]),t._v(" "),v("p",[t._v("服务器找不到请求的网页")]),t._v(" "),v("h4",{attrs:{id:"_422-无法处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_422-无法处理"}},[t._v("#")]),t._v(" 422 无法处理")]),t._v(" "),v("p",[t._v("请求格式正确，但是由于含有语义错误，无法响应")]),t._v(" "),v("h4",{attrs:{id:"_500-服务器内部错误"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_500-服务器内部错误"}},[t._v("#")]),t._v(" 500 服务器内部错误")]),t._v(" "),v("p",[t._v("服务器遇到错误，无法完成请求。")]),t._v(" "),v("h4",{attrs:{id:"_502-bad-gateway"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_502-bad-gateway"}},[t._v("#")]),t._v(" 502 Bad Gateway")]),t._v(" "),v("p",[t._v("作为网关或代理工作的服务器，尝试执行请求是，从上游服务器接收到无效的响应。")]),t._v(" "),v("h3",{attrs:{id:"响应报头"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#响应报头"}},[t._v("#")]),t._v(" 响应报头")]),t._v(" "),v("p",[t._v("用于服务器传递自身信息的响应，常见的有:")]),t._v(" "),v("ul",[v("li",[t._v("Allow: 服务器支持哪些方法(GET POST...)")]),t._v(" "),v("li",[t._v("LOCATION: 用于重定向接收者到一个新位置，常用在"),v("strong",[t._v("更换域名")]),t._v("的时候。")]),t._v(" "),v("li",[t._v("Server: 包含可服务器用来处理请求的系统信息，与User-Agent请求报头是相对应的。")]),t._v(" "),v("li",[t._v("Access-Control-Allow-Origin: 指定哪些站点可以参与跨站资源共享。")])]),t._v(" "),v("h3",{attrs:{id:"响应正文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#响应正文"}},[t._v("#")]),t._v(" 响应正文")]),t._v(" "),v("p",[t._v("服务器返回的资源内容")]),t._v(" "),v("h2",{attrs:{id:"浏览器解析渲染页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析渲染页面"}},[t._v("#")]),t._v(" 浏览器解析渲染页面")]),t._v(" "),v("ul",[v("li",[t._v("解析HTML形成DOM树")]),t._v(" "),v("li",[t._v("解析CSS形成CSSOM 树")]),t._v(" "),v("li",[t._v("合并DOM树和CSSOM树形成渲染树")]),t._v(" "),v("li",[t._v("浏览器开始渲染并绘制页面")])]),t._v(" "),v("h3",{attrs:{id:"什么是回流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是回流"}},[t._v("#")]),t._v(" 什么是回流？")]),t._v(" "),v("p",[t._v("当渲染树中有部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染这些元素的过程，称之为回流。")]),t._v(" "),v("h4",{attrs:{id:"哪些操作会引起回流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#哪些操作会引起回流"}},[t._v("#")]),t._v(" 哪些操作会引起回流？")]),t._v(" "),v("ol",[v("li",[t._v("元素的尺寸、位置、文字大小、内容发生变化")]),t._v(" "),v("li",[t._v("浏览器窗口大小变化")]),t._v(" "),v("li",[t._v("添加或删除可见的DOM元素")]),t._v(" "),v("li",[t._v("激活CSS伪类(如:hover)")]),t._v(" "),v("li",[t._v("页面首次渲染")])]),t._v(" "),v("h3",{attrs:{id:"什么是重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是重绘"}},[t._v("#")]),t._v(" 什么是重绘？")]),t._v(" "),v("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时(如:color、background-color、visibility等)，浏览器将新样式赋予元素并重新绘制它，这个过程称为重绘。")])])}),[],!1,null,null,null);_.default=s.exports}}]);